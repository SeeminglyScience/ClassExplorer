#
# Module manifest for module 'ClassExplorer'
#
# Generated by: Patrick Meinecke
#
# Generated on: 8/21/2017
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'ClassExplorer.psm1'

# Version number of this module.
ModuleVersion = '2.3.0'

# Supported PSEditions
CompatiblePSEditions = 'Desktop', 'Core'

# ID used to uniquely identify this module
GUID = 'd215eeb5-5fdb-4174-a59f-61316972aaa9'

# Author of this module
Author = 'Patrick Meinecke'

# Company or vendor of this module
CompanyName = 'Community'

# Copyright statement for this module
Copyright = '(c) 2017 Patrick Meinecke. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Quickly search the AppDomain for classes and members.'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '5.1'

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.7.1'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
ProcessorArchitecture = 'None'

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @()

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = 'Find-Member', 'Find-Type', 'Get-Assembly', 'Get-Parameter', 'Format-MemberSignature'

# Variables to export from this module
VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @('fit', 'fime', 'gasm', 'gpa')

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('DotNet', 'Class', 'Member', 'Reflection')

        # A URL to the license for this module.
        LicenseUri = 'https://github.com/SeeminglyScience/ClassExplorer/blob/master/LICENSE'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/SeeminglyScience/ClassExplorer'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = @'
## 2.3.0

* Add `-Extension` parameter to `Find-Member`. This will find only extension methods
* Add `index` signature keyword for restricting matches to a specific method parameter
  index. (e.g. `[allof[index0, string]]` will match if the first parameter is a `string`.

## 2.2.0

### Add `-RecurseNestedType` parameter

A lot of queries were a little harder with automatically recursing nested types.
So you could do something like:

```powershell
Find-Type -Not -Base delegate | Find-Member -Not -Virtual | Find-Member Invoke
```

And end up with a bunch of members from nested delegates. This also lets you
filter nested types easier. Basically we are just actually treating nested types
like other members unless you specifically request otherwise.

### Other

* Filter sealed and abstract methods from virtual
* Fix filters applying incorrectly with `-Not` or when piped
* Add some extra parameter aliases

## 2.1.0

- Add signature keywords `abstract` and `concrete`
- Find-Type no longer includes non-public classes when `-Not` is specified
- Members from `System.Object` are now properly excluded from structs and enums when `-IncludeObject` is not specified
- `params` now shows in member format
- Member formatting is now grouped by full type name of reflected type.
- New slot virtual members now display properly when they are also sealed

## 2.0.1
- Fix error messages and help

## 2.0.0
- Added type signatures, a custom query language built into type expressions. See https://seemingly.dev/about-type-signatures
- A lot of fixes and tweaks
- Removed Find-Namespace command
'@

    } # End of PSData hashtable

} # End of PrivateData hashtable

}
